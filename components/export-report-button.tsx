"use client"

import { useState } from "react"
import { Download } from "lucide-react"
import { jsPDF } from "jspdf"
import { Button } from "@/components/ui/button"
import { toast } from "@/components/ui/use-toast"

interface ExportReportButtonProps {
  className?: string
}

export function ExportReportButton({ className }: ExportReportButtonProps) {
  const [isExporting, setIsExporting] = useState(false)

  const handleExport = async () => {
    try {
      setIsExporting(true)

      // Get assessment results from localStorage
      const assessmentData = localStorage.getItem("assessmentResults")
      if (!assessmentData) {
        toast({
          title: "No assessment data found",
          description: "Please complete an assessment first.",
          variant: "destructive",
        })
        return
      }

      const results = JSON.parse(assessmentData)

      // Create PDF document
      const doc = new jsPDF()

      // Add title
      doc.setFontSize(22)
      doc.text("Legal IT Maturity Assessment Results", 20, 20)

      // Add date
      doc.setFontSize(12)
      doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 30)

      // Add organization name if available
      const orgName = localStorage.getItem("organizationName") || "Your Organization"
      doc.text(`Organization: ${orgName}`, 20, 40)

      // Add overall score
      let yPos = 60
      doc.setFontSize(16)
      doc.text("Domain Scores", 20, yPos)
      yPos += 10

      // Add domain scores
      doc.setFontSize(12)
      Object.entries(results).forEach(([domain, score]) => {
        doc.text(`${domain}: ${Number(score).toFixed(2)} / 5.0`, 30, yPos)
        yPos += 10
      })

      // Add maturity level explanation
      yPos += 10
      doc.setFontSize(16)
      doc.text("Maturity Levels", 20, yPos)
      yPos += 10

      doc.setFontSize(12)
      doc.text("1.0-1.9: Initial - Basic processes with minimal formalization", 30, yPos)
      yPos += 8
      doc.text("2.0-2.9: Developing - Emerging processes with some standardization", 30, yPos)
      yPos += 8
      doc.text("3.0-3.9: Established - Formalized processes with good documentation", 30, yPos)
      yPos += 8
      doc.text("4.0-4.9: Managed - Measured and controlled processes", 30, yPos)
      yPos += 8
      doc.text("5.0: Optimized - Continuously improving processes", 30, yPos)

      // Add footer
      doc.setFontSize(10)
      doc.text("Generated by Legal IT Maturity Assessment Tool", 20, 280)

      // Save the PDF
      doc.save(`${orgName.replace(/\s+/g, "_")}_IT_Maturity_Assessment.pdf`)

      toast({
        title: "Export successful",
        description: "Your assessment results have been exported as a PDF.",
      })
    } catch (error) {
      console.error("Export error:", error)
      toast({
        title: "Export failed",
        description: "There was an error exporting your results. Please try again.",
        variant: "destructive",
      })
    } finally {
      setIsExporting(false)
    }
  }

  return (
    <Button onClick={handleExport} disabled={isExporting} className={className} variant="outline">
      <Download className="mr-2 h-4 w-4" />
      {isExporting ? "Exporting..." : "Export Report"}
    </Button>
  )
}
